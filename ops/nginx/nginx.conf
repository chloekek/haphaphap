# This file contains the configuration for nginx.
# The variables delimited by @@ are substituted
# at build time by the script in default.nix.

# Daemonization is performed by systemd or hivemind.
# We do not want nginx to daemonize itself.
daemon off;

# By default, nginx creates log and pid files in the installation directory.
# This obviously does not work if nginx resides in the nix store.
# We configure it to store these files in the prefix directory,
# which is given to nginx by systemd or hivemind.
error_log error.log;
pid nginx.pid;

# Configure the nginx event loop.
# We currently do not provide any options,
# but nginx insists on this stansa being specified.
events
{
}

# Configure how nginx serves over http.
http
{
    # Like the log and pid files configured above,
    # we configure these files to be stored in the prefix directory.
    access_log access.log;
    client_body_temp_path client_body_temp;
    fastcgi_temp_path fastcgi_temp;
    proxy_temp_path proxy_temp;
    scgi_temp_path scgi_temp;
    uwsgi_temp_path uwsgi_temp;

    # Configure the api and static file server.
    server
    {
        # Listen on the port specified in the haphaphap nix overlay.
        listen @NGINX_PORT@;

        # Forward any api calls to the application server, php-fpm.
        # This requires us to set some fastcgi options,
        # which can be found in fastcgi.conf.
        location = /api
        {
            # Include the fastcgi parameter boilerplate.
            include fastcgi.conf;

            # Tell php-fpm which script to execute to handle the request.
            fastcgi_param SCRIPT_FILENAME @APP_BACKEND@/www/index.php;

            # Tell nginx to forward the request to php-fpm.
            fastcgi_pass 127.0.0.1:@PHP_FPM_PORT@;
        }

        # Serve any static files from the static files directory.
        location /static/
        {
            # TODO: Use root or alias directive.
            return 404;
        }
    }
}
